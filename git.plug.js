var mod=(()=>{var d=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var g=(t,e)=>{for(var o in e)d(t,o,{get:e[o],enumerable:!0})},L=(t,e,o,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of A(e))!S.call(t,s)&&s!==o&&d(t,s,{get:()=>e[s],enumerable:!(n=C(e,s))||n.enumerable});return t};var D=t=>L(d({},"__esModule",{value:!0}),t);var Fe={};g(Fe,{functionMapping:()=>k});var p=class{constructor(e,o=!0){this.print=o,this.callback=e}log(...e){this.push("log",e)}warn(...e){this.push("warn",e)}error(...e){this.push("error",e)}info(...e){this.push("info",e)}push(e,o){this.callback(e,this.logMessage(o)),this.print&&console[e](...o)}logMessage(e){let o=[];for(let n of e)switch(typeof n){case"string":case"number":o.push(""+n);break;case"undefined":o.push("undefined");break;default:try{let s=JSON.stringify(n,null,2);s.length>500&&(s=s.substring(0,500)+"..."),o.push(s)}catch{o.push("[circular object]")}}return o.join(" ")}};function h(t){let e=atob(t),o=e.length,n=new Uint8Array(o);for(let s=0;s<o;s++)n[s]=e.charCodeAt(s);return n}function E(t,e){return syscall("sandboxFetch.fetch",t,e)}function v(){globalThis.fetch=async function(t,e){let o=await E(t,e&&{method:e.method,headers:e.headers,body:e.body});return new Response(o.base64Body?h(o.base64Body):null,{status:o.status,headers:o.headers})}}typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var y=new Map,f=0;function c(t){self.postMessage(t)}self.syscall=async(t,...e)=>await new Promise((o,n)=>{f++,y.set(f,{resolve:o,reject:n}),c({type:"sys",id:f,name:t,args:e})});self.console=new p((t,e)=>{c({type:"log",level:t,message:e})},!1);function b(t,e){self.addEventListener("message",o=>{(async()=>{let n=o.data;switch(n.type){case"inv":{let s=t[n.name];if(!s)throw new Error(`Function not loaded: ${n.name}`);try{let i=await Promise.resolve(s(...n.args||[]));c({type:"invr",id:n.id,result:i})}catch(i){c({type:"invr",id:n.id,error:i.message,stack:i.stack})}}break;case"sysr":{let s=n.id,i=y.get(s);if(!i)throw Error("Invalid request id");y.delete(s),n.error?i.reject(new Error(n.error)):i.resolve(n.result)}break}})().catch(console.error)}),c({type:"manifest",manifest:e})}v();var a=self.syscall;var l={};g(l,{run:()=>q});function q(t,e){return a("shell.run",t,e)}typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=self.syscall;var m={};g(m,{confirm:()=>ae,dispatch:()=>se,downloadFile:()=>z,filterBox:()=>X,flashNotification:()=>H,getCurrentPage:()=>B,getCursor:()=>K,getSelection:()=>V,getText:()=>j,getUiOption:()=>le,hidePanel:()=>ee,insertAtCursor:()=>ne,insertAtPos:()=>te,moveCursor:()=>oe,navigate:()=>_,openUrl:()=>Y,prompt:()=>ie,reloadPage:()=>J,replaceRange:()=>re,save:()=>W,setPage:()=>G,setSelection:()=>Q,setUiOption:()=>me,showPanel:()=>Z,vimEx:()=>ce});function B(){return r("editor.getCurrentPage")}function G(t){return r("editor.setPage",t)}function j(){return r("editor.getText")}function K(){return r("editor.getCursor")}function V(){return r("editor.getSelection")}function Q(t,e){return r("editor.setSelection",t,e)}function W(){return r("editor.save")}function _(t,e,o=!1,n=!1){return r("editor.navigate",t,e,o,n)}function J(){return r("editor.reloadPage")}function Y(t){return r("editor.openUrl",t)}function z(t,e){return r("editor.downloadFile",t,e)}function H(t,e="info"){return r("editor.flashNotification",t,e)}function X(t,e,o="",n=""){return r("editor.filterBox",t,e,o,n)}function Z(t,e,o,n=""){return r("editor.showPanel",t,e,o,n)}function ee(t){return r("editor.hidePanel",t)}function te(t,e){return r("editor.insertAtPos",t,e)}function re(t,e,o){return r("editor.replaceRange",t,e,o)}function oe(t,e=!1){return r("editor.moveCursor",t,e)}function ne(t){return r("editor.insertAtCursor",t)}function se(t){return r("editor.dispatch",t)}function ie(t,e=""){return r("editor.prompt",t,e)}function ae(t){return r("editor.confirm",t)}function le(t){return r("editor.getUiOption",t)}function me(t,e){return r("editor.setUiOption",t,e)}function ce(t){return r("editor.vimEx",t)}var x=class{listPages(e=!1){return r("space.listPages",e)}getPageMeta(e){return r("space.getPageMeta",e)}readPage(e){return r("space.readPage",e)}writePage(e,o){return r("space.writePage",e,o)}deletePage(e){return r("space.deletePage",e)}listPlugs(){return r("space.listPlugs")}listAttachments(){return r("space.listAttachments")}getAttachmentMeta(e){return r("space.getAttachmentMeta",e)}readAttachment(e){return r("space.readAttachment",e)}writeAttachment(e,o,n){return r("space.writeAttachment",e,o,n)}deleteAttachment(e){return r("space.deleteAttachment",e)}readFile(e,o){return r("space.readFile",e,o)}getFileMeta(e){return r("space.getFileMeta",e)}writeFile(e,o,n){return r("space.writeFile",e,o,n)}deleteFile(e){return r("space.deleteFile",e)}listFiles(e){return r("space.listFiles",e)}},de=new x;var u={};g(u,{getEnv:()=>he,invokeCommand:()=>ye,invokeFunction:()=>fe,listCommands:()=>xe,reloadPlugs:()=>Pe});function fe(t,e,...o){return r("system.invokeFunction",t,e,...o)}function ye(t){return r("system.invokeCommand",t)}function xe(){return r("system.listCommands")}function Pe(){r("system.reloadPlugs")}function he(){return r("system.getEnv")}async function P(t){t||(t="Snapshot"),console.log("Snapshotting the current space to git with commit message",t);let{code:e}=await l.run("git",["add","./*.md"]);console.log("Git add code",e);try{await l.run("git",["commit","-a","-m",t])}catch{}console.log("Done!")}async function F(){let t=await m.prompt("Revision name:");t||(t="Snapshot"),console.log("Revision name",t),await u.invokeFunction("server","commit",t)}async function w(){await m.flashNotification("Syncing with git"),await u.invokeFunction("server","sync"),await m.flashNotification("Git sync complete!")}async function M(){console.log("Going to sync with git"),await P(),console.log("Then pulling from remote"),await l.run("git",["pull"]),console.log("And then pushing to remote"),await l.run("git",["push"]),console.log("Done!")}var k={snapshotCommand:F,syncCommand:w,commit:P,sync:M},be={name:"git",imports:["https://get.silverbullet.md/global.plug.json"],requiredPermissions:["shell"],functions:{snapshotCommand:{path:"./git.ts:snapshotCommand",env:"client",command:{name:"Git: Snapshot"}},syncCommand:{path:"./git.ts:syncCommand",env:"client",command:{name:"Git: Sync"}},commit:{path:"./git.ts:commit",env:"server"},sync:{path:"./git.ts:sync",env:"server"}},assets:{}};b(k,be);return D(Fe);})();
