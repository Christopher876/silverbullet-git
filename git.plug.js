var V=Object.defineProperty;var l=(e,t)=>{for(var o in t)V(e,o,{get:t[o],enumerable:!0})};var w=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var x=new Map,P=0;function f(e){self.postMessage(e)}w&&(globalThis.syscall=async(e,...t)=>await new Promise((o,n)=>{P++,x.set(P,{resolve:o,reject:n}),f({type:"sys",id:P,name:e,args:t})}));function A(e,t){w&&(self.addEventListener("message",o=>{(async()=>{let n=o.data;switch(n.type){case"inv":{let s=e[n.name];if(!s)throw new Error(`Function not loaded: ${n.name}`);try{let a=await Promise.resolve(s(...n.args||[]));f({type:"invr",id:n.id,result:a})}catch(a){console.error("An exception was thrown as a result of invoking function",n.name,"error:",a.message),f({type:"invr",id:n.id,error:a.message})}}break;case"sysr":{let s=n.id,a=x.get(s);if(!a)throw Error("Invalid request id");x.delete(s),n.error?a.reject(new Error(n.error)):a.resolve(n.result)}break}})().catch(console.error)}),f({type:"manifest",manifest:t}))}function q(e){let t=atob(e),o=t.length,n=new Uint8Array(o);for(let s=0;s<o;s++)n[s]=t.charCodeAt(s);return n}function C(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",o=e.byteLength;for(let n=0;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}async function I(e,t){if(typeof e!="string"){let o=new Uint8Array(await e.arrayBuffer()),n=o.length>0?C(o):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:n},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function W(){globalThis.fetch=async function(e,t){let o=t&&t.body?C(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,n=await I(e,t&&{method:t.method,headers:t.headers,base64Body:o});return new Response(n.base64Body?q(n.base64Body):null,{status:n.status,headers:n.headers})}}w&&W();var i={};l(i,{confirm:()=>xe,copyToClipboard:()=>Ee,dispatch:()=>he,downloadFile:()=>ae,filterBox:()=>le,flashNotification:()=>ue,fold:()=>Te,foldAll:()=>Se,getCurrentPage:()=>Y,getCursor:()=>_,getSelection:()=>J,getText:()=>Q,getUiOption:()=>we,goHistory:()=>se,hidePanel:()=>de,insertAtCursor:()=>ye,insertAtPos:()=>pe,moveCursor:()=>ge,navigate:()=>z,openCommandPalette:()=>te,openPageNavigator:()=>ee,openSearchPanel:()=>Fe,openUrl:()=>ie,prompt:()=>Pe,redo:()=>ke,reloadPage:()=>re,reloadSettingsAndCommands:()=>oe,reloadUI:()=>ne,replaceRange:()=>fe,save:()=>Z,setPage:()=>H,setSelection:()=>X,setText:()=>j,setUiOption:()=>be,showPanel:()=>me,toggleFold:()=>Ce,undo:()=>Ue,unfold:()=>Ae,unfoldAll:()=>Me,uploadFile:()=>ce,vimEx:()=>ve});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=globalThis.syscall;function Y(){return r("editor.getCurrentPage")}function H(e){return r("editor.setPage",e)}function Q(){return r("editor.getText")}function j(e){return r("editor.setText",e)}function _(){return r("editor.getCursor")}function J(){return r("editor.getSelection")}function X(e,t){return r("editor.setSelection",e,t)}function Z(){return r("editor.save")}function z(e,t=!1,o=!1){return r("editor.navigate",e,t,o)}function ee(e="page"){return r("editor.openPageNavigator",e)}function te(){return r("editor.openCommandPalette")}function re(){return r("editor.reloadPage")}function ne(){return r("editor.reloadUI")}function oe(){return r("editor.reloadSettingsAndCommands")}function ie(e,t=!1){return r("editor.openUrl",e,t)}function se(e){return r("editor.goHistory",e)}function ae(e,t){return r("editor.downloadFile",e,t)}function ce(e,t){return r("editor.uploadFile",e,t)}function ue(e,t="info"){return r("editor.flashNotification",e,t)}function le(e,t,o="",n=""){return r("editor.filterBox",e,t,o,n)}function me(e,t,o,n=""){return r("editor.showPanel",e,t,o,n)}function de(e){return r("editor.hidePanel",e)}function pe(e,t){return r("editor.insertAtPos",e,t)}function fe(e,t,o){return r("editor.replaceRange",e,t,o)}function ge(e,t=!1){return r("editor.moveCursor",e,t)}function ye(e){return r("editor.insertAtCursor",e)}function he(e){return r("editor.dispatch",e)}function Pe(e,t=""){return r("editor.prompt",e,t)}function xe(e){return r("editor.confirm",e)}function we(e){return r("editor.getUiOption",e)}function be(e,t){return r("editor.setUiOption",e,t)}function ve(e){return r("editor.vimEx",e)}function Te(){return r("editor.fold")}function Ae(){return r("editor.unfold")}function Ce(){return r("editor.toggleFold")}function Se(){return r("editor.foldAll")}function Me(){return r("editor.unfoldAll")}function Ue(){return r("editor.undo")}function ke(){return r("editor.redo")}function Fe(){return r("editor.openSearchPanel")}function Ee(e){return r("editor.copyToClipboard",e)}var g={};l(g,{parseMarkdown:()=>Ke});function Ke(e){return r("markdown.parseMarkdown",e)}var m={};l(m,{deleteAttachment:()=>Ie,deleteFile:()=>je,deletePage:()=>$e,getAttachmentMeta:()=>Oe,getFileMeta:()=>He,getPageMeta:()=>De,listAttachments:()=>Le,listFiles:()=>We,listPages:()=>Ne,listPlugs:()=>Be,readAttachment:()=>Ve,readFile:()=>Ye,readPage:()=>Re,writeAttachment:()=>qe,writeFile:()=>Qe,writePage:()=>Ge});function Ne(e=!1){return r("space.listPages",e)}function De(e){return r("space.getPageMeta",e)}function Re(e){return r("space.readPage",e)}function Ge(e,t){return r("space.writePage",e,t)}function $e(e){return r("space.deletePage",e)}function Be(){return r("space.listPlugs")}function Le(){return r("space.listAttachments")}function Oe(e){return r("space.getAttachmentMeta",e)}function Ve(e){return r("space.readAttachment",e)}function qe(e,t){return r("space.writeAttachment",e,t)}function Ie(e){return r("space.deleteAttachment",e)}function We(){return r("space.listFiles")}function Ye(e){return r("space.readFile",e)}function He(e){return r("space.getFileMeta",e)}function Qe(e,t){return r("space.writeFile",e,t)}function je(e){return r("space.deleteFile",e)}var c={};l(c,{run:()=>ot});function ot(e,t){return r("shell.run",e,t)}var d={};l(d,{parse:()=>it,stringify:()=>st});function it(e){return r("yaml.parse",e)}function st(e){return r("yaml.stringify",e)}function b(e,t){if(t(e))return[e];let o=[];if(e.children)for(let n of e.children)o=[...o,...b(n,t)];return o}function v(e,t){return b(e,o=>o.type===t)[0]}function S(e,t){b(e,t)}async function ut(e,t){let o=await m.readPage(e),n=await g.parseMarkdown(o),s;return S(n,a=>{if(a.type!=="FencedCode")return!1;let h=v(a,"CodeInfo");if(t&&!h||t&&!t.includes(h.children[0].text))return!1;let p=v(a,"CodeText");return p?(s=p.children[0].text,!0):!1}),s}async function M(e,t=["yaml"]){let o=await ut(e,t);if(o!==void 0)try{return d.parse(o)}catch(n){throw console.error("YAML Page parser error",n),new Error(`YAML Error: ${n.message}`)}}var lt="SETTINGS";async function u(e,t){try{let n=(await M(lt,["yaml"])||{})[e];return n===void 0?t:n}catch(o){if(o.message==="Not found")return t;throw o}}async function T(e){e||(e="Snapshot"),console.log("Snapshotting the current space to git with commit message",e);let{code:t}=await c.run("git",["add","./*"]);console.log("Git add code",t);try{await c.run("git",["commit","-a","-m",e])}catch{}console.log("Done!")}async function U(){let e=await i.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e),await T(e),await i.flashNotification("Done!")}async function k(){await i.flashNotification("Syncing with git"),await E(),await i.flashNotification("Git sync complete!")}async function F(){return(await u("git",{})).verifyCert?"":"-c http.sslVerify=false"}async function E(){console.log("Going to sync with git"),await T(),console.log("Then pulling from remote"),await c.run("git",["pull"]),console.log("And then pushing to remote"),await c.run("git",["push"]),console.log("Done!")}async function K(){let e=await u("git",{});await i.flashNotification(`Auto commit is set to ${e.autoCommitMinutes} minutes and auto sync is set to ${e.autoSync}`),await i.flashNotification(`Token is ${e.token}, name is ${e.name}, email is ${e.email}`)}async function y(e){let t=e.split(" ");return c.run("git",t)}function mt(e){let t=["url","authType","authData","name","email","verifyCert"],o=Object.keys(e);for(let n of t)if(!o.includes(n))return!1;return!0}async function N(){let e=await u("git",{});if(!e){await i.flashNotification("Git config is not configured");return}if(!mt(e)){await i.flashNotification("Git config is not fully configured");return}let t=e.url,o=e.authType,n=e.authData,s=e.name,a=e.email,h=e.verifyCert;switch(o){case"token":let B=n;t=t.replace("https://",`https://${B}@`);break;case"userpass":let[L,O]=n.split(":");t=t.replace("https://",`https://${L}:${O}@`);break;case"sshkey":await i.flashNotification("SSH Key auth is not supported yet");break;default:await i.flashNotification(`Unknown auth type ${o}`);break}await i.flashNotification(`Cloning from ${t}`),await c.run("mkdir",["-p","_checkout"]);let p=await F();await y(`clone ${p} ${t} _checkout`),await c.run("bash",["-c","mv -f _checkout/{.,}* . 2> /dev/null; true"]),await c.run("rm",["-rf","_checkout"]),await y(`config user.name ${s}`),await y(`config user.email ${a}`),await i.flashNotification("Done. Now just wait for sync to kick in to get all the content.")}async function dt(){console.log("Pulling from remote");let e=await F();await y(`${e} pull`),console.log("Done!")}async function D(){let e=await u("git",{});!e.autoPullMinutes||new Date().getMinutes()%e.autoPullMinutes!==0||(console.log("Auto pull time!"),await dt())}async function R(){let e=await u("git",{});e.autoCommitMinutes&&(console.log("Triggered auto commit with config",e),new Date().getMinutes()%e.autoCommitMinutes===0&&(console.log("Auto commit time!"),e.autoSync?await E():await T("Auto commit")))}var G={autoCommit:R,autoPull:D,infoCommand:K,cloneCommand:N,snapshotCommand:U,syncCommand:k},$={name:"git",requiredPermissions:["shell"],functions:{autoCommit:{path:"git.ts:autoCommit",env:"server",cron:"* * * * *"},autoPull:{path:"git.ts:autoPull",env:"server",cron:"* * * * *"},infoCommand:{path:"git.ts:infoCommand",command:{name:"Git: Info"}},cloneCommand:{path:"git.ts:cloneCommand",command:{name:"Git: Clone"}},snapshotCommand:{path:"./git.ts:snapshotCommand",command:{name:"Git: Snapshot"}},syncCommand:{path:"./git.ts:syncCommand",command:{name:"Git: Sync"}}},assets:{}},er={manifest:$,functionMapping:G};A(G,$);export{er as plug};
