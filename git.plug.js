var V=Object.defineProperty;var u=(e,t)=>{for(var n in t)V(e,n,{get:t[n],enumerable:!0})};var b=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var w=new Map,x=0;function g(e){self.postMessage(e)}b&&(globalThis.syscall=async(e,...t)=>await new Promise((n,o)=>{x++,w.set(x,{resolve:n,reject:o}),g({type:"sys",id:x,name:e,args:t})}));function A(e,t){b&&(self.addEventListener("message",n=>{(async()=>{let o=n.data;switch(o.type){case"inv":{let s=e[o.name];if(!s)throw new Error(`Function not loaded: ${o.name}`);try{let a=await Promise.resolve(s(...o.args||[]));g({type:"invr",id:o.id,result:a})}catch(a){console.error("An exception was thrown as a result of invoking function",o.name,"error:",a.message),g({type:"invr",id:o.id,error:a.message})}}break;case"sysr":{let s=o.id,a=w.get(s);if(!a)throw Error("Invalid request id");w.delete(s),o.error?a.reject(new Error(o.error)):a.resolve(o.result)}break}})().catch(console.error)}),g({type:"manifest",manifest:t}))}function q(e){let t=atob(e),n=t.length,o=new Uint8Array(n);for(let s=0;s<n;s++)o[s]=t.charCodeAt(s);return o}function C(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",n=e.byteLength;for(let o=0;o<n;o++)t+=String.fromCharCode(e[o]);return btoa(t)}async function I(e,t){if(typeof e!="string"){let n=new Uint8Array(await e.arrayBuffer()),o=n.length>0?C(n):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:o},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function W(){globalThis.fetch=async function(e,t){let n=t&&t.body?C(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,o=await I(e,t&&{method:t.method,headers:t.headers,base64Body:n});return new Response(o.base64Body?q(o.base64Body):null,{status:o.status,headers:o.headers})}}b&&W();var i={};u(i,{confirm:()=>xe,copyToClipboard:()=>Ee,dispatch:()=>he,downloadFile:()=>ae,filterBox:()=>ue,flashNotification:()=>le,fold:()=>Te,foldAll:()=>Se,getCurrentPage:()=>Y,getCursor:()=>_,getSelection:()=>J,getText:()=>Q,getUiOption:()=>we,goHistory:()=>se,hidePanel:()=>de,insertAtCursor:()=>ye,insertAtPos:()=>fe,moveCursor:()=>ge,navigate:()=>z,openCommandPalette:()=>te,openPageNavigator:()=>ee,openSearchPanel:()=>Fe,openUrl:()=>ie,prompt:()=>Pe,redo:()=>Ue,reloadPage:()=>re,reloadSettingsAndCommands:()=>oe,reloadUI:()=>ne,replaceRange:()=>pe,save:()=>Z,setPage:()=>H,setSelection:()=>X,setText:()=>j,setUiOption:()=>be,showPanel:()=>me,toggleFold:()=>Ce,undo:()=>ke,unfold:()=>Ae,unfoldAll:()=>Me,uploadFile:()=>ce,vimEx:()=>ve});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=globalThis.syscall;function Y(){return r("editor.getCurrentPage")}function H(e){return r("editor.setPage",e)}function Q(){return r("editor.getText")}function j(e){return r("editor.setText",e)}function _(){return r("editor.getCursor")}function J(){return r("editor.getSelection")}function X(e,t){return r("editor.setSelection",e,t)}function Z(){return r("editor.save")}function z(e,t=!1,n=!1){return r("editor.navigate",e,t,n)}function ee(e="page"){return r("editor.openPageNavigator",e)}function te(){return r("editor.openCommandPalette")}function re(){return r("editor.reloadPage")}function ne(){return r("editor.reloadUI")}function oe(){return r("editor.reloadSettingsAndCommands")}function ie(e,t=!1){return r("editor.openUrl",e,t)}function se(e){return r("editor.goHistory",e)}function ae(e,t){return r("editor.downloadFile",e,t)}function ce(e,t){return r("editor.uploadFile",e,t)}function le(e,t="info"){return r("editor.flashNotification",e,t)}function ue(e,t,n="",o=""){return r("editor.filterBox",e,t,n,o)}function me(e,t,n,o=""){return r("editor.showPanel",e,t,n,o)}function de(e){return r("editor.hidePanel",e)}function fe(e,t){return r("editor.insertAtPos",e,t)}function pe(e,t,n){return r("editor.replaceRange",e,t,n)}function ge(e,t=!1){return r("editor.moveCursor",e,t)}function ye(e){return r("editor.insertAtCursor",e)}function he(e){return r("editor.dispatch",e)}function Pe(e,t=""){return r("editor.prompt",e,t)}function xe(e){return r("editor.confirm",e)}function we(e){return r("editor.getUiOption",e)}function be(e,t){return r("editor.setUiOption",e,t)}function ve(e){return r("editor.vimEx",e)}function Te(){return r("editor.fold")}function Ae(){return r("editor.unfold")}function Ce(){return r("editor.toggleFold")}function Se(){return r("editor.foldAll")}function Me(){return r("editor.unfoldAll")}function ke(){return r("editor.undo")}function Ue(){return r("editor.redo")}function Fe(){return r("editor.openSearchPanel")}function Ee(e){return r("editor.copyToClipboard",e)}var y={};u(y,{parseMarkdown:()=>Ke});function Ke(e){return r("markdown.parseMarkdown",e)}var m={};u(m,{deleteAttachment:()=>Ie,deleteFile:()=>je,deletePage:()=>$e,getAttachmentMeta:()=>Oe,getFileMeta:()=>He,getPageMeta:()=>De,listAttachments:()=>Le,listFiles:()=>We,listPages:()=>Ne,listPlugs:()=>Be,readAttachment:()=>Ve,readFile:()=>Ye,readPage:()=>Re,writeAttachment:()=>qe,writeFile:()=>Qe,writePage:()=>Ge});function Ne(e=!1){return r("space.listPages",e)}function De(e){return r("space.getPageMeta",e)}function Re(e){return r("space.readPage",e)}function Ge(e,t){return r("space.writePage",e,t)}function $e(e){return r("space.deletePage",e)}function Be(){return r("space.listPlugs")}function Le(){return r("space.listAttachments")}function Oe(e){return r("space.getAttachmentMeta",e)}function Ve(e){return r("space.readAttachment",e)}function qe(e,t){return r("space.writeAttachment",e,t)}function Ie(e){return r("space.deleteAttachment",e)}function We(){return r("space.listFiles")}function Ye(e){return r("space.readFile",e)}function He(e){return r("space.getFileMeta",e)}function Qe(e,t){return r("space.writeFile",e,t)}function je(e){return r("space.deleteFile",e)}var c={};u(c,{run:()=>ot});function ot(e,t){return r("shell.run",e,t)}var d={};u(d,{parse:()=>it,stringify:()=>st});function it(e){return r("yaml.parse",e)}function st(e){return r("yaml.stringify",e)}function v(e,t){if(t(e))return[e];let n=[];if(e.children)for(let o of e.children)n=[...n,...v(o,t)];return n}function T(e,t){return v(e,n=>n.type===t)[0]}function S(e,t){v(e,t)}async function lt(e,t){let n=await m.readPage(e),o=await y.parseMarkdown(n),s;return S(o,a=>{if(a.type!=="FencedCode")return!1;let p=T(a,"CodeInfo");if(t&&!p||t&&!t.includes(p.children[0].text))return!1;let P=T(a,"CodeText");return P?(s=P.children[0].text,!0):!1}),s}async function M(e,t=["yaml"]){let n=await lt(e,t);if(n!==void 0)try{return d.parse(n)}catch(o){throw console.error("YAML Page parser error",o),new Error(`YAML Error: ${o.message}`)}}var ut="SETTINGS";async function l(e,t){try{let o=(await M(ut,["yaml"])||{})[e];return o===void 0?t:o}catch(n){if(n.message==="Not found")return t;throw n}}async function mt(){console.log("Pulling from remote");let e=await k(),t=await ft();await f(`${e} pull ${t}`),console.log("Done!")}async function dt(){console.log("Pushing to remote"),await f("push"),console.log("Done!")}async function k(){return(await l("git",{})).verifyCert?"":"-c http.sslVerify=false"}async function ft(){let e=await l("git",{});return e.resolveConflict?`--${e.resolveConflict}`:""}async function U(){console.log("Going to sync with git"),await h(),console.log("Then pulling from remote"),await c.run("git",["pull"]),console.log("And then pushing to remote"),await c.run("git",["push"]),console.log("Done!")}async function f(e){let t=e.split(" ");return c.run("git",t)}function pt(e){let t=["url","authType","authData","name","email","verifyCert"],n=Object.keys(e);for(let o of t)if(!n.includes(o))return!1;return!0}async function h(e){e||(e="Snapshot"),console.log("Snapshotting the current space to git with commit message",e);let{code:t}=await c.run("git",["add","./*"]);console.log("Git add code",t);try{await c.run("git",["commit","-a","-m",e])}catch{}console.log("Done!")}async function F(){let e=await i.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e),await h(e),await i.flashNotification("Done!")}async function E(){await i.flashNotification("Syncing with git"),await U(),await i.flashNotification("Git sync complete!")}async function K(){let e=await l("git",{});await i.flashNotification(`Auto commit is set to ${e.autoCommitMinutes} minutes and auto sync is set to ${e.autoSync}`),await i.flashNotification(`Token is ${e.token}, name is ${e.name}, email is ${e.email}`)}async function N(){let e=await l("git",{});if(!e){await i.flashNotification("Git config is not configured");return}if(!pt(e)){await i.flashNotification("Git config is not fully configured");return}let t=e.url,n=e.authType,o=e.authData,s=e.name,a=e.email,p=await k(),P=e.resolveConflict,gt=e.operations;switch(n){case"token":let B=o;t=t.replace("https://",`https://${B}@`);break;case"userpass":let[L,O]=o.split(":");t=t.replace("https://",`https://${L}:${O}@`);break;case"sshkey":await i.flashNotification("SSH Key auth is not supported yet");break;default:await i.flashNotification(`Unknown auth type ${n}`);break}await i.flashNotification(`Cloning from ${t}`),await c.run("mkdir",["-p","_checkout"]),await f(`clone ${p} ${t} _checkout`),await c.run("bash",["-c","mv -f _checkout/{.,}* . 2> /dev/null; true"]),await c.run("rm",["-rf","_checkout"]),await f(`config user.name ${s}`),await f(`config user.email ${a}`),await i.flashNotification("Done. Now just wait for sync to kick in to get all the content.")}async function D(){let e=await l("git",{});if(!e.autoPullMinutes||new Date().getMinutes()%e.autoPullMinutes!==0)return;let n=e.operations;n||(n=["pull"]),n.sort();for(let o of n)switch(o){case"pull":await mt();break;case"push":await h("Auto commit"),await dt();break;default:await i.flashNotification(`Unknown operation ${o}`);break}}async function R(){let e=await l("git",{});e.autoCommitMinutes&&(console.log("Triggered auto commit with config",e),new Date().getMinutes()%e.autoCommitMinutes===0&&(console.log("Auto commit time!"),e.autoSync?await U():await h("Auto commit")))}var G={autoCommit:R,autoPull:D,infoCommand:K,cloneCommand:N,snapshotCommand:F,syncCommand:E},$={name:"git",requiredPermissions:["shell"],functions:{autoCommit:{path:"git.ts:autoCommit",env:"server",cron:"* * * * *"},autoPull:{path:"git.ts:autoPull",env:"server",cron:"* * * * *"},infoCommand:{path:"git.ts:infoCommand",command:{name:"Git: Info"}},cloneCommand:{path:"git.ts:cloneCommand",command:{name:"Git: Clone"}},snapshotCommand:{path:"./git.ts:snapshotCommand",command:{name:"Git: Snapshot"}},syncCommand:{path:"./git.ts:syncCommand",command:{name:"Git: Sync"}}},assets:{}},nr={manifest:$,functionMapping:G};A(G,$);export{nr as plug};
