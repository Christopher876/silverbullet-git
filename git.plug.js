var mod=(()=>{var d=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var l=(e,t)=>{for(var n in t)d(e,n,{get:t[n],enumerable:!0})},F=(e,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of M(t))!k.call(e,s)&&s!==n&&d(e,s,{get:()=>t[s],enumerable:!(o=C(t,s))||o.enumerable});return e};var U=e=>F(d({},"__esModule",{value:!0}),e);var Pe={};l(Pe,{functionMapping:()=>A});function x(e){let t=atob(e),n=t.length,o=new Uint8Array(n);for(let s=0;s<n;s++)o[s]=t.charCodeAt(s);return o}function S(e,t){return syscall("sandboxFetch.fetch",e,t)}function P(){globalThis.fetch=async function(e,t){let n=await S(e,t&&{method:t.method,headers:t.headers,body:t.body});return new Response(n.base64Body?x(n.base64Body):null,{status:n.status,headers:n.headers})}}typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var f=new Map,g=0;function p(e){self.postMessage(e)}self.syscall=async(e,...t)=>await new Promise((n,o)=>{g++,f.set(g,{resolve:n,reject:o}),p({type:"sys",id:g,name:e,args:t})});function h(e,t){self.addEventListener("message",n=>{(async()=>{let o=n.data;switch(o.type){case"inv":{let s=e[o.name];if(!s)throw new Error(`Function not loaded: ${o.name}`);try{let i=await Promise.resolve(s(...o.args||[]));p({type:"invr",id:o.id,result:i})}catch(i){console.error(i),p({type:"invr",id:o.id,error:i.message})}}break;case"sysr":{let s=o.id,i=f.get(s);if(!i)throw Error("Invalid request id");f.delete(s),o.error?i.reject(new Error(o.error)):i.resolve(o.result)}break}})().catch(console.error)}),p({type:"manifest",manifest:t})}P();var c=self.syscall;var a={};l(a,{run:()=>R});function R(e,t){return c("shell.run",e,t)}var m={};l(m,{confirm:()=>re,dispatch:()=>ee,downloadFile:()=>W,filterBox:()=>j,flashNotification:()=>_,getCurrentPage:()=>T,getCursor:()=>L,getSelection:()=>N,getText:()=>O,getUiOption:()=>ne,hidePanel:()=>z,insertAtCursor:()=>Z,insertAtPos:()=>H,moveCursor:()=>X,navigate:()=>K,openUrl:()=>Q,prompt:()=>te,reloadPage:()=>V,replaceRange:()=>J,save:()=>B,setPage:()=>G,setSelection:()=>$,setUiOption:()=>oe,showPanel:()=>Y,vimEx:()=>se});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=self.syscall;function T(){return r("editor.getCurrentPage")}function G(e){return r("editor.setPage",e)}function O(){return r("editor.getText")}function L(){return r("editor.getCursor")}function N(){return r("editor.getSelection")}function $(e,t){return r("editor.setSelection",e,t)}function B(){return r("editor.save")}function K(e,t,n=!1,o=!1){return r("editor.navigate",e,t,n,o)}function V(){return r("editor.reloadPage")}function Q(e){return r("editor.openUrl",e)}function W(e,t){return r("editor.downloadFile",e,t)}function _(e,t="info"){return r("editor.flashNotification",e,t)}function j(e,t,n="",o=""){return r("editor.filterBox",e,t,n,o)}function Y(e,t,n,o=""){return r("editor.showPanel",e,t,n,o)}function z(e){return r("editor.hidePanel",e)}function H(e,t){return r("editor.insertAtPos",e,t)}function J(e,t,n){return r("editor.replaceRange",e,t,n)}function X(e,t=!1){return r("editor.moveCursor",e,t)}function Z(e){return r("editor.insertAtCursor",e)}function ee(e){return r("editor.dispatch",e)}function te(e,t=""){return r("editor.prompt",e,t)}function re(e){return r("editor.confirm",e)}function ne(e){return r("editor.getUiOption",e)}function oe(e,t){return r("editor.setUiOption",e,t)}function se(e){return r("editor.vimEx",e)}var u={};l(u,{getEnv:()=>de,invokeCommand:()=>ue,invokeFunction:()=>me,listCommands:()=>le,reloadPlugs:()=>pe});function me(e,t,...n){return r("system.invokeFunction",e,t,...n)}function ue(e){return r("system.invokeCommand",e)}function le(){return r("system.listCommands")}function pe(){r("system.reloadPlugs")}function de(){return r("system.getEnv")}async function y(e){e||(e="Snapshot"),console.log("Snapshotting the current space to git with commit message",e);let{code:t}=await a.run("git",["add","./*.md"]);console.log("Git add code",t);try{await a.run("git",["commit","-a","-m",e])}catch{}console.log("Done!")}async function v(){let e=await m.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e),await u.invokeFunction("server","commit",e)}async function b(){await m.flashNotification("Syncing with git"),await u.invokeFunction("server","sync"),await m.flashNotification("Git sync complete!")}async function w(){console.log("Going to sync with git"),await y(),console.log("Then pulling from remote"),await a.run("git",["pull"]),console.log("And then pushing to remote"),await a.run("git",["push"]),console.log("Done!")}var A={snapshotCommand:v,syncCommand:b,commit:y,sync:w},xe={name:"git",requiredPermissions:["shell"],functions:{snapshotCommand:{path:"./git.ts:snapshotCommand",env:"client",command:{name:"Git: Snapshot"}},syncCommand:{path:"./git.ts:syncCommand",env:"client",command:{name:"Git: Sync"}},commit:{path:"./git.ts:commit",env:"server"},sync:{path:"./git.ts:sync",env:"server"}},assets:{}};h(A,xe);return U(Pe);})();
