var R=Object.defineProperty;var u=(e,t)=>{for(var o in t)R(e,o,{get:t[o],enumerable:!0})};var y=typeof window>"u"&&typeof globalThis.WebSocketPair>"u";typeof Deno>"u"&&(self.Deno={args:[],build:{arch:"x86_64"},env:{get(){}}});var g=new Map,f=0;function m(e){self.postMessage(e)}y&&(globalThis.syscall=async(e,...t)=>await new Promise((o,n)=>{f++,g.set(f,{resolve:o,reject:n}),m({type:"sys",id:f,name:e,args:t})}));function v(e,t){y&&(self.addEventListener("message",o=>{(async()=>{let n=o.data;switch(n.type){case"inv":{let i=e[n.name];if(!i)throw new Error(`Function not loaded: ${n.name}`);try{let c=await Promise.resolve(i(...n.args||[]));m({type:"invr",id:n.id,result:c})}catch(c){console.error("An exception was thrown as a result of invoking function",n.name,"error:",c.message),m({type:"invr",id:n.id,error:c.message})}}break;case"sysr":{let i=n.id,c=g.get(i);if(!c)throw Error("Invalid request id");g.delete(i),n.error?c.reject(new Error(n.error)):c.resolve(n.result)}break}})().catch(console.error)}),m({type:"manifest",manifest:t}))}function D(e){let t=atob(e),o=t.length,n=new Uint8Array(o);for(let i=0;i<o;i++)n[i]=t.charCodeAt(i);return n}function T(e){typeof e=="string"&&(e=new TextEncoder().encode(e));let t="",o=e.byteLength;for(let n=0;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}async function G(e,t){if(typeof e!="string"){let o=new Uint8Array(await e.arrayBuffer()),n=o.length>0?T(o):void 0;t={method:e.method,headers:Object.fromEntries(e.headers.entries()),base64Body:n},e=e.url}return syscall("sandboxFetch.fetch",e,t)}globalThis.nativeFetch=globalThis.fetch;function B(){globalThis.fetch=async function(e,t){let o=t&&t.body?T(new Uint8Array(await new Response(t.body).arrayBuffer())):void 0,n=await G(e,t&&{method:t.method,headers:t.headers,base64Body:o});return new Response(n.base64Body?D(n.base64Body):null,{status:n.status,headers:n.headers})}}y&&B();var s={};u(s,{confirm:()=>me,copyToClipboard:()=>Ae,dispatch:()=>le,downloadFile:()=>ee,filterBox:()=>ne,flashNotification:()=>re,fold:()=>ye,foldAll:()=>xe,getCurrentPage:()=>L,getCursor:()=>Y,getSelection:()=>I,getText:()=>q,getUiOption:()=>pe,goHistory:()=>z,hidePanel:()=>ie,insertAtCursor:()=>ue,insertAtPos:()=>se,moveCursor:()=>ce,navigate:()=>V,openCommandPalette:()=>_,openPageNavigator:()=>$,openSearchPanel:()=>Te,openUrl:()=>Z,prompt:()=>de,redo:()=>ve,reloadPage:()=>H,reloadSettingsAndCommands:()=>X,reloadUI:()=>J,replaceRange:()=>ae,save:()=>Q,setPage:()=>O,setSelection:()=>j,setText:()=>W,setUiOption:()=>fe,showPanel:()=>oe,toggleFold:()=>Pe,undo:()=>be,unfold:()=>he,unfoldAll:()=>we,uploadFile:()=>te,vimEx:()=>ge});typeof self>"u"&&(self={syscall:()=>{throw new Error("Not implemented here")}});var r=globalThis.syscall;function L(){return r("editor.getCurrentPage")}function O(e){return r("editor.setPage",e)}function q(){return r("editor.getText")}function W(e){return r("editor.setText",e)}function Y(){return r("editor.getCursor")}function I(){return r("editor.getSelection")}function j(e,t){return r("editor.setSelection",e,t)}function Q(){return r("editor.save")}function V(e,t=!1,o=!1){return r("editor.navigate",e,t,o)}function $(e="page"){return r("editor.openPageNavigator",e)}function _(){return r("editor.openCommandPalette")}function H(){return r("editor.reloadPage")}function J(){return r("editor.reloadUI")}function X(){return r("editor.reloadSettingsAndCommands")}function Z(e,t=!1){return r("editor.openUrl",e,t)}function z(e){return r("editor.goHistory",e)}function ee(e,t){return r("editor.downloadFile",e,t)}function te(e,t){return r("editor.uploadFile",e,t)}function re(e,t="info"){return r("editor.flashNotification",e,t)}function ne(e,t,o="",n=""){return r("editor.filterBox",e,t,o,n)}function oe(e,t,o,n=""){return r("editor.showPanel",e,t,o,n)}function ie(e){return r("editor.hidePanel",e)}function se(e,t){return r("editor.insertAtPos",e,t)}function ae(e,t,o){return r("editor.replaceRange",e,t,o)}function ce(e,t=!1){return r("editor.moveCursor",e,t)}function ue(e){return r("editor.insertAtCursor",e)}function le(e){return r("editor.dispatch",e)}function de(e,t=""){return r("editor.prompt",e,t)}function me(e){return r("editor.confirm",e)}function pe(e){return r("editor.getUiOption",e)}function fe(e,t){return r("editor.setUiOption",e,t)}function ge(e){return r("editor.vimEx",e)}function ye(){return r("editor.fold")}function he(){return r("editor.unfold")}function Pe(){return r("editor.toggleFold")}function xe(){return r("editor.foldAll")}function we(){return r("editor.unfoldAll")}function be(){return r("editor.undo")}function ve(){return r("editor.redo")}function Te(){return r("editor.openSearchPanel")}function Ae(e){return r("editor.copyToClipboard",e)}var p={};u(p,{parseMarkdown:()=>Ce});function Ce(e){return r("markdown.parseMarkdown",e)}var l={};u(l,{deleteAttachment:()=>Ge,deleteFile:()=>We,deletePage:()=>ke,getAttachmentMeta:()=>Ne,getFileMeta:()=>Oe,getPageMeta:()=>Me,listAttachments:()=>Ke,listFiles:()=>Be,listPages:()=>Se,listPlugs:()=>Ee,readAttachment:()=>Re,readFile:()=>Le,readPage:()=>Ue,writeAttachment:()=>De,writeFile:()=>qe,writePage:()=>Fe});function Se(e=!1){return r("space.listPages",e)}function Me(e){return r("space.getPageMeta",e)}function Ue(e){return r("space.readPage",e)}function Fe(e,t){return r("space.writePage",e,t)}function ke(e){return r("space.deletePage",e)}function Ee(){return r("space.listPlugs")}function Ke(){return r("space.listAttachments")}function Ne(e){return r("space.getAttachmentMeta",e)}function Re(e){return r("space.readAttachment",e)}function De(e,t){return r("space.writeAttachment",e,t)}function Ge(e){return r("space.deleteAttachment",e)}function Be(){return r("space.listFiles")}function Le(e){return r("space.readFile",e)}function Oe(e){return r("space.getFileMeta",e)}function qe(e,t){return r("space.writeFile",e,t)}function We(e){return r("space.deleteFile",e)}var a={};u(a,{run:()=>Xe});function Xe(e,t){return r("shell.run",e,t)}var d={};u(d,{parse:()=>Ze,stringify:()=>ze});function Ze(e){return r("yaml.parse",e)}function ze(e){return r("yaml.stringify",e)}function h(e,t){if(t(e))return[e];let o=[];if(e.children)for(let n of e.children)o=[...o,...h(n,t)];return o}function P(e,t){return h(e,o=>o.type===t)[0]}function A(e,t){h(e,t)}async function rt(e,t){let o=await l.readPage(e),n=await p.parseMarkdown(o),i;return A(n,c=>{if(c.type!=="FencedCode")return!1;let w=P(c,"CodeInfo");if(t&&!w||t&&!t.includes(w.children[0].text))return!1;let b=P(c,"CodeText");return b?(i=b.children[0].text,!0):!1}),i}async function C(e,t=["yaml"]){let o=await rt(e,t);if(o!==void 0)try{return d.parse(o)}catch(n){throw console.error("YAML Page parser error",n),new Error(`YAML Error: ${n.message}`)}}var nt="SETTINGS";async function S(e,t){try{let n=(await C(nt,["yaml"])||{})[e];return n===void 0?t:n}catch(o){if(o.message==="Not found")return t;throw o}}async function x(e){e||(e="Snapshot"),console.log("Snapshotting the current space to git with commit message",e);let{code:t}=await a.run("git",["add","./*"]);console.log("Git add code",t);try{await a.run("git",["commit","-a","-m",e])}catch{}console.log("Done!")}async function M(){let e=await s.prompt("Revision name:");e||(e="Snapshot"),console.log("Revision name",e),await x(e),await s.flashNotification("Done!")}async function U(){await s.flashNotification("Syncing with git"),await F(),await s.flashNotification("Git sync complete!")}async function F(){console.log("Going to sync with git"),await x(),console.log("Then pulling from remote"),await a.run("git",["pull"]),console.log("And then pushing to remote"),await a.run("git",["push"]),console.log("Done!")}async function k(){let e=await s.prompt("Git repo URL:");if(!e)return;let t=await s.prompt("Github token:");if(!t)return;let o=await s.prompt("Your name:");if(!o)return;let n=await s.prompt("Your email:");if(!n)return;let i=e.split("/");i[2]=`${t}@${i[2]}`,e=i.join("/")+".git",await s.flashNotification("Now going to clone the project, this may take some time."),await a.run("mkdir",["-p","_checkout"]),await a.run("git",["clone",e,"_checkout"]),await a.run("bash",["-c","mv -f _checkout/{.,}* . 2> /dev/null; true"]),await a.run("rm",["-rf","_checkout"]),await a.run("git",["config","user.name",o]),await a.run("git",["config","user.email",n]),await s.flashNotification("Done. Now just wait for sync to kick in to get all the content.")}async function E(){let e=await S("git",{});e.autoCommitMinutes&&(console.log("Triggered auto commit with config",e),new Date().getMinutes()%e.autoCommitMinutes===0&&(console.log("Auto commit time!"),e.autoSync?await F():await x("Auto commit")))}var K={autoCommit:E,cloneCommand:k,snapshotCommand:M,syncCommand:U},N={name:"git",requiredPermissions:["shell"],functions:{autoCommit:{path:"git.ts:autoCommit",env:"server",cron:"* * * * *"},cloneCommand:{path:"./git.ts:cloneCommand",command:{name:"Git: Clone"}},snapshotCommand:{path:"./git.ts:snapshotCommand",command:{name:"Git: Snapshot"}},syncCommand:{path:"./git.ts:syncCommand",command:{name:"Git: Sync"}}},assets:{}},It={manifest:N,functionMapping:K};v(K,N);export{It as plug};
